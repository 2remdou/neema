<?php

namespace AppBundle\Repository;

/**
 * PlatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlatRepository extends \Doctrine\ORM\EntityRepository
{
    use UtilForRepository;

    private function minQueryBuilder(){
        $queryBuilder = $this->createQueryBuilder('p');
        return $queryBuilder;
    }
    private function mainQueryBuilder(){
        $queryBuilder = $this->createQueryBuilder('p')
            ->addSelect(['r','ir','q','c','ip'])
            ->leftJoin('p.restaurant','r')
            ->leftJoin('r.imageRestaurants','ir')
            ->leftJoin('r.quartier','q')
            ->leftJoin('q.commune','c')
            ->leftJoin('p.imagePlat','ip');

        return $queryBuilder;
    }
    public function findAll(){
        return $this->mainQueryBuilder()
            ->getQuery()
            ->getArrayResult();    }

    public function findOnMenu($page=1,$countPerPage=10){

        $p = $this->minQueryBuilder()
            ->where('p.onMenu=true')
            ->setFirstResult(($page-1)*$countPerPage)
            ->setMaxResults($countPerPage)
            ->getQuery()
            ->getArrayResult();

        $plats = $this->mainQueryBuilder()
            ->where('p.id IN (:plats)')
            ->setParameter(':plats',$p)
            ->getQuery()
            ->getArrayResult();
        return $plats;
    }

    public function findByRestaurant($idRestaurant='',$page=1,$countPerPage=10){

        $p = $this->minQueryBuilder()
            ->leftJoin('p.restaurant','r')
            ->where('r.id LIKE :idRestaurant')
            ->setParameter('idRestaurant',$idRestaurant)
            ->setFirstResult(($page-1)*$countPerPage)
            ->setMaxResults($countPerPage)
            ->getQuery()
            ->getArrayResult();

        $plats = $this->mainQueryBuilder()
            ->where('p.id IN (:plats)')
            ->setParameter(':plats',$p)
            ->getQuery()
            ->getArrayResult();

        return $plats;

    }

    public function findOnMenuByRestaurant($idRestaurant,$page=1,$countPerPage=10){
        $p = $this->minQueryBuilder()
            ->leftJoin('p.restaurant','r')
            ->where('r.id=:idRestaurant')
            ->andWhere('p.onMenu=true')
            ->setParameter('idRestaurant',$idRestaurant)
            ->setFirstResult(($page-1)*$countPerPage)
            ->setMaxResults($countPerPage)
            ->getQuery()
            ->getArrayResult();

               $plats = $this->mainQueryBuilder()
                   ->where('p.id IN (:plats)')
                   ->setParameter(':plats',$p)
                   ->getQuery()
                   ->getArrayResult();

        return $plats;
    }

    public function findById($id){

        $plat = $this->mainQueryBuilder()
            ->where('p.id LIKE :id')
            ->setParameter('id',$id)
            ->getQuery()
            ->getArrayResult();

        return count($plat)===1?$plat[0]:null;
    }

}
