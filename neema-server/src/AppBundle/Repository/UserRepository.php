<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    use UtilForRepository;

    private function getMainDql(){
        $dql  = "SELECT PARTIAL u.{id,username,nom,prenom,roles},ur,r,q,c
                 FROM AppBundle:User u
                 LEFT JOIN u.userRestaurant ur
                 LEFT JOIN ur.restaurant r
                 LEFT JOIN r.quartier q
                 LEFT JOIN q.commune c
                 ORDER BY u.username";
        return $dql;
    }

    /**
     * @return \Doctrine\ORM\QueryBuilder
     */
    private function getMainQueryBuilder(){
        return $this->createQueryBuilder('u')
            ->select(['PARTIAL u.{id,username,nom,prenom,roles,enabled}','ur','r','q','c'])
            ->leftJoin('u.userRestaurant','ur')
            ->leftJoin('ur.restaurant','r')
            ->leftJoin('r.quartier','q')
            ->leftJoin('q.commune','c');

    }
    public function findAll(){

        return $this->getEntityManager()
                ->createQuery($this->getMainDql())
                ->getArrayResult();
    }

    public function findById($id){
        $user = $this->getMainQueryBuilder()
            ->where('u.id=:id')
            ->setParameter('id',$id)
            ->getQuery()
            ->getArrayResult();
        return count($user)===1?$user[0]:null;
    }

    public function findUsersRestaurantAndLivreur(){

        $users= $this->getEntityManager()
                ->createQuery($this->getMainDql())
                ->getArrayResult();

        $resultat = array_filter($users,function($user){
            if(in_array($user['roles'][0],array('ROLE_RESTAURANT','ROLE_LIVREUR'))){
                return $user;
            }
        });

        return array_values($resultat);
    }

}
